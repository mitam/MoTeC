// open up a CAN receive handle 
local up = CanComms.RxOpenStandard(0, 0xA0, 0x0, true);
local down = CanComms.RxOpenExtended(0, 0xB0, 0x0, true);

// determine whether to pull data from CAN
if (Paddle Shifts Location eq Data input location.CAN) {
	if (CanComms.RxMessage(up) and CanComms.rxmessage(down)) {
		if (CanComms.GetUnsignedInteger(up, 0, 8) > 0) {
			Upshift = Upshift.On;
		} else {
			Upshift = Upshift.Off;
		}
		
	if (CanComms.RxMessage(down)) {
		if (CanComms.GetUnsignedInteger(down, 0, 8) > 0) {
			Downshift = Downshift.On;
		} else {
			Downshift = Downshift.Off;
		}
	}
	} else {
		Upshift = Upshift.Off;
		Downshift = Downshift.Off;
	}
} else {
	Upshift = Upshift.Off;
	Downshift = Downshift.off;
}