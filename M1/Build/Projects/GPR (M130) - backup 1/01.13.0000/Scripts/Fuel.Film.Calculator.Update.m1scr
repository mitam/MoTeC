local fuelchange = Change.By(Fuel.Test.AsInteger(), 1);
local tpchange = Change.By(Throttle.Position, Reset Tolerance);
local contchange = Change.By(Fuel.Injector.Secondary.Contribution, 0.0099);

local reset = fuelchange or tpchange or contchange;

when (Source)
{
	is (Overall)
	{
		Value.Update(Exhaust.Lambda, reset);
	}
	is (Bank 1)
	{
		Value.Update(Exhaust.Lambda.Bank 1, reset);
	}
	is (Bank 2)
	{
		Value.Update(Exhaust.Lambda.Bank 2, reset);
	}
	is (Cylinder 1)
	{
		Value.Update(Exhaust.Lambda.Cylinder 1, reset);
	}
	is (Cylinder 2)
	{
		Value.Update(Exhaust.Lambda.Cylinder 2, reset);
	}
	is (Cylinder 3)
	{
		Value.Update(Exhaust.Lambda.Cylinder 3, reset);
	}
	is (Cylinder 4)
	{
		Value.Update(Exhaust.Lambda.Cylinder 4, reset);
	}
	is (Cylinder 5)
	{
		Value.Update(Exhaust.Lambda.Cylinder 5, reset);
	}
	is (Cylinder 6)
	{
		Value.Update(Exhaust.Lambda.Cylinder 6, reset);
	}
	is (Cylinder 7)
	{
		Value.Update(Exhaust.Lambda.Cylinder 7, reset);
	}
	is (Cylinder 8)
	{
		Value.Update(Exhaust.Lambda.Cylinder 8, reset);
	}
}
