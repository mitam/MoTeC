// opens a CAN receive handle for receiving messages
local fbrakes = CanComms.RxOpenStandard(0, 0x700, 0x0, true);
local rbrakes = CanComms.RxOpenExtended(0, 0x710, 0x0, true);

// pulls values from over CAN or from an input pin depending on where you tell it to pull from
 if (Brake Sensor Locations eq Data input location.CAN) {
	if (CanComms.RxMessage(fbrakes) and CanComms.RxMessage(rbrakes)) {
		Brake.Front Value = CanComms.GetUnsignedInteger(fbrakes, 0, 32);
		Brake.Rear Value = CanComms.GetUnsignedInteger(rbrakes, 0, 32);
	} else {
		Brake.Front Value = 0.0;
		Brake.Rear Value = 0.0;
	}
} else {
	Brake.Front Value = Front.Sensor;
	Brake.Rear Value = Rear.Sensor;
}