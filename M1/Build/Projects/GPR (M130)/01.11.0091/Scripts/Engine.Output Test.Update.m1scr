if (Value neq Value.Disabled)
{
	Engine.Speed.Reference.Test Speed = This.Engine Speed;
}
else
{
	Engine.Speed.Reference.Test Speed = 0.0;
}

local fp1 = Port Injection Test.Disabled;
local fs1 = Port Injection Test.Disabled;
local i1 = Ignition Test.Disabled;
local fp2 = Port Injection Test.Disabled;
local fs2 = Port Injection Test.Disabled;
local i2 = Ignition Test.Disabled;
local fp3 = Port Injection Test.Disabled;
local fs3 = Port Injection Test.Disabled;
local i3 = Ignition Test.Disabled;
local fp4 = Port Injection Test.Disabled;
local fs4 = Port Injection Test.Disabled;
local i4 = Ignition Test.Disabled;
local fp5 = Port Injection Test.Disabled;
local fs5 = Port Injection Test.Disabled;
local i5 = Ignition Test.Disabled;
local fp6 = Port Injection Test.Disabled;
local fs6 = Port Injection Test.Disabled;
local i6 = Ignition Test.Disabled;
local fp7 = Port Injection Test.Disabled;
local fs7 = Port Injection Test.Disabled;
local i7 = Ignition Test.Disabled;
local fp8 = Port Injection Test.Disabled;
local fs8 = Port Injection Test.Disabled;
local i8 = Ignition Test.Disabled;

when (Value)
{
	is (Disabled)
	{
		/* Do nothing */
	}
	is (Fuel Primary)
	{
		expand (n = 1 to Engine.Maximum Cylinders)
		{
			if ($(n) eq Cylinder)
			{
				fp$(n) = Port Injection Test.Enabled;
			}
		}
	}
	is (Fuel Secondary)
	{
		expand (n = 1 to Engine.Maximum Cylinders)
		{
			if ($(n) eq Cylinder)
			{
				fs$(n) = Port Injection Test.Enabled;
			}
		}
	}
	is (Ignition)
	{
		expand (n = 1 to Engine.Maximum Cylinders)
		{
			if ($(n) eq Cylinder)
			{
				i$(n) = Ignition Test.Enabled;
			}
		}
	}
}

expand (n = 1 to Engine.Maximum Cylinders)
{
	Fuel.Cylinder $(n).Primary.Output.Test = fp$(n);
	Fuel.Cylinder $(n).Secondary.Output.Test = fs$(n);
	Ignition.Cylinder $(n).Output.Test = i$(n);
}
