local v = 0.0;
local s = State.None;

if (Engine.Overrun.State eq Engine.Overrun.State.Enabled)
{
	v = 1.0;
	s = s.Engine Overrun;
}
else if (Boost.Control.Diagnostic eq Boost.Control.Diagnostic.Maximum)
{
	v = 1.0;
	s = s.Boost Control Diagnostic;
}
else if (Engine.State eq Engine.State.Crank and Engine.Crank.Flooded Throttle Position > 0.0 and Throttle.Position > Engine.Crank.Flooded Throttle Position)
{
	v = 1.0;
	s = s.Flooded Throttle Position;
}

if (not Calculate.IsNAN(Gear.Shift.Fuel Cut) and
	v < Gear.Shift.Fuel Cut)
{
	v = Gear.Shift.Fuel Cut;
	s = State.Gear Shift;
}

if (Anti Lag.State eq Anti Lag.State.Enabled and
	v < Anti Lag.Fuel Cut)
{
	v = Anti Lag.Fuel Cut;
	s = State.Anti Lag;
}

local diag = Fuel.Output.Diagnostic.GetUnscheduled();
if (s eq s.None
	and (diag eq diag.Engine Speed Limit or diag eq diag.Engine Speed Maximum))
{
	s = State.Engine Speed Limit;
}

Value = v;
State = s;
