local v = Maximum;
if (v <= 0.0)
{
	v = Calculate.NAN();
}
local s = State.Maximum;
local pitEngSpLim = Calculate.NAN();

if ((Pit.Mode neq Pit.Mode.Not in Use) and 
    (Driver.Pit Switch eq Driver.Pit Switch.On) and
    ((Pit < v) or (Calculate.IsNAN(v))) and
    (Pit > 0.0) and
    (Gear.AsInteger() >= 1)
)
{
	if (Pit.Mode eq Pit.Mode.Throttle)
	{
		v = Pit;
		s = State.Pit;
	}
	else if (Pit.Mode eq Pit.Mode.Engine Speed Limit)
	{
		pitEngSpLim = Pit.Engine Speed Limit.Ideal() + Pit.Engine Speed Limit.Correction;
	}
	else
	{
		v = Pit;
		s = State.Pit;
		pitEngSpLim = (Vehicle.Speed.Limit.Pit + Pit.Engine Speed Limit.Offset)
					   * 360.0 * Vehicle.DriveRatio() / Vehicle.DriveCircumference();
	}
}

Value = v;
State = s;
Pit.Engine Speed Limit = pitEngSpLim;
