
local on = Calculate.Hysteresis(Inlet.Manifold.Flap.Aim, 0.00009, 0.99991, 0.0);	// 0.0001 is the default resolution of the Aim table
local noTransition = Delay.Stable(Actuator.State.AsInteger(), Diagnostic.Delay);
local diag = Inlet Manifold Flap Diagnostic Enumeration.OK;
local target = 0.0;
if (on)
{
	target = 1.0;
}

Actuator.SetState(on and Enable eq Enable.Enabled);

local posOKB1 = Calculate.Between(Position.Bank 1, target - Diagnostic.Margin, target + Diagnostic.Margin, 0.0);
local posOKB2 = Calculate.Between(Position.Bank 2, target - Diagnostic.Margin, target + Diagnostic.Margin, 0.0);

if (Diagnostic neq Diagnostic.Not in Use)
{
	local hardwareOK = (Actuator.Pin.Diagnostic eq Actuator.Pin.Diagnostic.OK)
						and ((Position.Bank 1.Sensor.Diagnostic.AsInteger() >= Position.Bank 1.Sensor.Diagnostic.OK.AsInteger())
							or (Position.Bank 2.Sensor.Diagnostic.AsInteger() >= Position.Bank 2.Sensor.Diagnostic.OK.AsInteger()));

	if ((not noTransition) or (not hardwareOK))
	{
		diag = Inlet Manifold Flap Diagnostic Enumeration.Inactive;
	}
	else
	{
		if (not posOKB1 and Position.Bank 1.Sensor.Diagnostic neq Position.Bank 1.Sensor.Diagnostic.Not in Use)
		{
			diag = Inlet Manifold Flap Diagnostic Enumeration.Bank 1 Deviation;
		}
		if (not posOKB2 and Position.Bank 2.Sensor.Diagnostic neq Position.Bank 2.Sensor.Diagnostic.Not in Use)
		{
			if (diag eq Inlet Manifold Flap Diagnostic Enumeration.Bank 1 Deviation)
			{
				diag = Inlet Manifold Flap Diagnostic Enumeration.Both Banks Deviation;
			}
			else
			{
				diag = Inlet Manifold Flap Diagnostic Enumeration.Bank 2 Deviation;
			}
		}
	}
	Diagnostic = diag;
}
