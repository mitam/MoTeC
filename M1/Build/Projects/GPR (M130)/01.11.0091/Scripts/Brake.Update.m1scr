local hystFront = Calculate.Hysteresis(Pressure.Front.Sensor, Pressure.Front.Threshold - Pressure.Front.Hysteresis, Pressure.Front.Threshold, 0.0);
local hystRear = Calculate.Hysteresis(Pressure.Rear.Sensor, Pressure.Rear.Threshold - Pressure.Rear.Hysteresis, Pressure.Rear.Threshold, 0.0);

/* State determination */

local okandOn = false;
local sensorOK = false;

if (Pressure.Front.Sensor.Diagnostic.AsInteger() >= Pressure.Front.Sensor.Diagnostic.OK.AsInteger())
{
	sensorOK = true;
	if (hystFront)
	{
		okandOn = true;
	}
}

if (Pressure.Rear.Sensor.Diagnostic.AsInteger() >= Pressure.Rear.Sensor.Diagnostic.OK.AsInteger())
{
	sensorOK = true;
	if (hystRear)
	{
		okandOn = true;
	}
}

if (This.Switch.Diagnostic.AsInteger() >= This.Switch.Diagnostic.OK.AsInteger())
{
	sensorOK = true;
	if (This.Switch eq This.Switch.On)
	{
		okandOn = true;
	}
}

local nosensor = ((Pressure.Front.Sensor.Diagnostic eq Pressure.Front.Sensor.Diagnostic.Not in Use)
					and (Pressure.Rear.Sensor.Diagnostic eq Pressure.Rear.Sensor.Diagnostic.Not in Use)
					and (not This.Switch.IsActive()));
					
if (nosensor)
{
	State = State.Unknown;
}
else if (okandOn)
{
	State = State.On;
}
else if (sensorOK)	// at least one sensor is OK and reading 'Off'
{
	State = State.Off;
}
else
{
	State = State.Sensor Fault;
}

