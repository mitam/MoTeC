local enabled = Parent.Mode eq Parent.Mode.Enabled and Output.IsActive();
local overridden = Override eq Override.Enabled;
local tmact = Nitrous.Time >= Activate.Time;
local tmlim = Time Limit > 0.0 and Time >= Time Limit;
local sysact = Nitrous.State eq Nitrous.State.Enabled;

local active = ((tmact and sysact) or overridden) and enabled;
local timestart = Delay.Rising(active, Activate.Delay);
local timereset = Delay.Rising(not active or State eq State.Time Limit, Hold);
timereset = timereset or not enabled;

local et = System.ElapsedTime();

when (State)
{
	is (Disabled)
	{
		if (active)
		{
			Output.Duty Cycle = Drive eq Drive.Low Side ? 1.0 : -1.0;
			State = State.Enabled;
		}
	}
	is (Enabled)
	{
		if (not active)
		{
			Output.Duty Cycle = 0.0;
			if (timereset)
			{
				Time = 0.0;
				State = State.Disabled;
			}
			else
			{
				Time += et;
				State = State.Wait;
			}
		} 
		else if (tmlim)
		{
			Output.Duty Cycle = 0.0;
			Time += et;
			State = State.Time Limit;
		}
		else if (timestart or (Time > 0.0))
		{
			Time += et;
		}
	}
	is (Wait)
	{
		if (active)
		{
			Time += et;
			State = State.Enabled;
			Output.Duty Cycle = Drive eq Drive.Low Side ? 1.0 : -1.0;
		}
		else if (timereset)
		{
			Time = 0.0;
			State = State.Disabled;
		}
	}
	is (Time Limit)
	{
		if (timereset)
		{
			Time = 0.0;
			if (not active)
			{
				State = State.Disabled;
			}
		}
	}
}
